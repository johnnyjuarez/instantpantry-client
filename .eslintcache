[{"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\index.js":"1","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\App.js":"2","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\reportWebVitals.js":"3","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\LandingPage\\LandingPage.js":"4","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\LoginForm\\LoginForm.js":"5","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\SignUpForm\\SignUpForm.js":"6","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\Dashboard\\Dashboard.js":"7","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\CategoryCard\\CategoryCard.js":"8","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddItem\\AddItem.js":"9","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\config.js":"10","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\token-service.js":"11","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\List\\List.js":"12","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Item\\Item.js":"13","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Modal\\Modal.js":"14","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddCategoryForm\\AddCategoryForm.js":"15","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Scanner\\Scanner.js":"16","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\barcodeScanner\\barcodeScanner.js":"17","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\BarcodeScanner\\BarcodeScanner.js":"18","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\itemContext.js":"19","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\useDebounce.js":"20"},{"size":457,"mtime":1609906845826,"results":"21","hashOfConfig":"22"},{"size":1424,"mtime":1610856210028,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":403,"mtime":1609986267622,"results":"25","hashOfConfig":"22"},{"size":1591,"mtime":1610596767005,"results":"26","hashOfConfig":"22"},{"size":543,"mtime":1609987205901,"results":"27","hashOfConfig":"22"},{"size":1744,"mtime":1610687640125,"results":"28","hashOfConfig":"22"},{"size":1172,"mtime":1610667833429,"results":"29","hashOfConfig":"22"},{"size":1624,"mtime":1610769583662,"results":"30","hashOfConfig":"22"},{"size":272,"mtime":1610679328696,"results":"31","hashOfConfig":"22"},{"size":421,"mtime":1610592319855,"results":"32","hashOfConfig":"22"},{"size":1013,"mtime":1610667934207,"results":"33","hashOfConfig":"22"},{"size":415,"mtime":1610672977724,"results":"34","hashOfConfig":"22"},{"size":350,"mtime":1610651380769,"results":"35","hashOfConfig":"22"},{"size":1075,"mtime":1610655342152,"results":"36","hashOfConfig":"22"},{"size":1982,"mtime":1610673155648,"results":"37","hashOfConfig":"22"},{"size":674,"mtime":1610674069752,"results":"38","hashOfConfig":"22"},{"size":1080,"mtime":1610856341466,"results":"39","hashOfConfig":"22"},{"size":129,"mtime":1610748978219,"results":"40","hashOfConfig":"22"},{"size":1303,"mtime":1610840873154,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"155tlxv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\index.js",[],["89","90"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\App.js",["91","92"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\reportWebVitals.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\LandingPage\\LandingPage.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\LoginForm\\LoginForm.js",["93","94"],"import React, {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport TokenService from '../../services/token-service';\r\n\r\nimport config from '../../config';\r\n\r\nexport default function LoginForm(props) {\r\n  let history = useHistory();\r\n\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const loginHandler = (e) => {\r\n    const credentials = {\r\n      username,\r\n      password\r\n    }\r\n    e.preventDefault();\r\n    fetch(`${config.API_ENDPOINT}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n    .then(res => {\r\n      if(!res.ok) {\r\n        return res.json().then(e => {\r\n          return Promise.reject(e);\r\n        })\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      localStorage.setItem('userId', data.id);\r\n      TokenService.saveAuthToken(data.authToken);\r\n      history.push('/dashboard');\r\n    })\r\n  }\r\n\r\n  const onChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={loginHandler} className='login-form'>\r\n        <h2>Login</h2>\r\n        <label>Username:</label>\r\n        <input onChange={onChangeUsername} type='text' />\r\n        <label>Password:</label>\r\n        <input onChange={onChangePassword} type='password' />\r\n        <input type='submit' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\SignUpForm\\SignUpForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\Dashboard\\Dashboard.js",["95"],"import React, { useState, useEffect } from 'react'\r\nimport CategoryCard from '../../components/CategoryCard/CategoryCard'\r\nimport Modal from '../../components/Modal/Modal'\r\nimport TokenService from '../../services/token-service'\r\n\r\nimport config from '../../config';\r\nimport AddCategoryForm from '../../components/AddCategoryForm/AddCategoryForm';\r\n\r\n\r\nexport default function Dashboard() {\r\n  // state for holding category data\r\n  const [categories, setCategories] = useState([])\r\n  const [addCategory, setAddCategory] = useState(false);\r\n  const [isDelete, setIsDelete] = useState(false);\r\n\r\n  const user_id = localStorage.getItem('userId');\r\n\r\n  useEffect(() => {\r\n    setIsDelete(false);\r\n\r\n    fetch(`${config.API_ENDPOINT}/category/${user_id}`, {\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setCategories(data);\r\n      })\r\n  }, [addCategory, isDelete])\r\n\r\n\r\n  const addCategoryHandler = () => {\r\n    setAddCategory(!addCategory);\r\n  }\r\n\r\n  let addCategoryHTML = (\r\n    <Modal open={addCategory} onClose={addCategoryHandler}>\r\n      <AddCategoryForm closeOnSubmit={addCategoryHandler} />\r\n    </Modal>\r\n  )\r\n\r\n  const categoryCards = categories.map((category) => {\r\n    return <CategoryCard\r\n      key={category.id}\r\n      id={category.id}\r\n      title={category.category_title}\r\n      onDelete={() => { setIsDelete(true) }}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='title'>InstantPantry</h1>\r\n      {categoryCards}\r\n      <button onClick={addCategoryHandler}>Add Category</button>\r\n      {addCategoryHTML}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\CategoryCard\\CategoryCard.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddItem\\AddItem.js",["96","97","98"],"import React, { useState } from 'react'\r\nimport BarcodeScanner from '../BarcodeScanner/BarcodeScanner'\r\nimport ItemContext from '../../itemContext';\r\n\r\nimport './AddItem.css'\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function AddItem(props) {\r\n  console.log(typeof props.barcode)\r\n  const [useForm, setUseForm] = useState(false);\r\n  const [useCamera, setUseCamera] = useState(false);\r\n  const [data, setData] = useState({});\r\n  let history = useHistory();\r\n\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  const formHTML = (\r\n    <form onSubmit={onSubmitHandler} className='add-item-form'>\r\n      <label>Item Name:</label>\r\n      <input type='text' />\r\n      <label>Amount:</label>\r\n      <input type='text' />\r\n      <label>Image:</label>\r\n      <input type='text' />\r\n      <input type='submit' />\r\n    </form>\r\n  )\r\n\r\n  if (typeof props.barcode === 'string') {\r\n    setUseCamera(false);\r\n  }\r\n\r\n  const camera = <BarcodeScanner />\r\n\r\n  let renderForm = null;\r\n  if (useForm) {\r\n    renderForm = formHTML;\r\n  } else if (useCamera) {\r\n    renderForm = camera;\r\n  }\r\n\r\n\r\n  const onManualSelect = (e) => {\r\n    setUseForm(true);\r\n    setUseCamera(false);\r\n  }\r\n\r\n  const onCameraSelect = (e) => {\r\n    setUseCamera(true);\r\n    setUseForm(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Link to='/dashboard'>Home</Link>\r\n      <h1 className='title'>Add Item</h1>\r\n      <button onClick={onManualSelect}>Enter Manually</button>\r\n      <button onClick={onCameraSelect}>Scan Barcode</button>\r\n      {renderForm}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\config.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\token-service.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\List\\List.js",["99"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport config from '../../config';\r\nimport TokenService from '../../services/token-service'\r\nimport Item from '../../components/Item/Item'\r\n\r\nexport default function List(props) {\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n\r\n  const idFromPath = props.location.pathname;\r\n  const category_id = idFromPath.slice(10);\r\n  useEffect(() => {\r\n    fetch(`${config.API_ENDPOINT}/items/${category_id}`, {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      setItems(data);\r\n    })\r\n  }, [])\r\n  \r\n\r\n  const renderList = items.map(item => {\r\n    return <Item key={item.id} itemData={item} />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <Link to='/dashboard'>Home</Link>\r\n      </nav>\r\n      <h1>List</h1>\r\n      {renderList}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Item\\Item.js",["100"],"import React, {useState} from 'react'\r\n// import Camera from '../Camera/Camera';\r\n\r\nexport default function Item(props) {\r\n\r\n  const itemData = props.itemData;\r\n  const image = null;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>{itemData.item_name}</h3>\r\n      <p>Amount : {itemData.amount}</p>\r\n      {image}\r\n      <div>\r\n        <button>Edit</button>\r\n        <button>Delete</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddCategoryForm\\AddCategoryForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Scanner\\Scanner.js",["101"],"import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\barcodeScanner\\barcodeScanner.js",["102"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\BarcodeScanner\\BarcodeScanner.js",["103","104","105","106"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\itemContext.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\useDebounce.js",["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":38},{"ruleId":"113","severity":1,"message":"117","line":18,"column":16,"nodeType":"115","messageId":"116","endLine":18,"endColumn":23},{"ruleId":"113","severity":1,"message":"118","line":13,"column":10,"nodeType":"115","messageId":"116","endLine":13,"endColumn":15},{"ruleId":"113","severity":1,"message":"119","line":13,"column":17,"nodeType":"115","messageId":"116","endLine":13,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":33,"column":6,"nodeType":"122","endLine":33,"endColumn":29,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"124","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"125","line":13,"column":10,"nodeType":"115","messageId":"116","endLine":13,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":13,"column":16,"nodeType":"115","messageId":"116","endLine":13,"endColumn":23},{"ruleId":"120","severity":1,"message":"126","line":27,"column":6,"nodeType":"122","endLine":27,"endColumn":8,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"128","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"129","line":63,"column":6,"nodeType":"122","endLine":63,"endColumn":8,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"131","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"131","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"132","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"133","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":20},{"ruleId":"113","severity":1,"message":"134","line":14,"column":22,"nodeType":"115","messageId":"116","endLine":14,"endColumn":35},{"ruleId":"113","severity":1,"message":"135","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"136","line":30,"column":5,"nodeType":"122","endLine":30,"endColumn":12,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'ItemContext' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'category_id'. Either include it or remove the dependency array.",["141"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'detected'. Either include it or remove the dependency array.",["142"],"'ReactDOM' is defined but never used.","'config' is defined but never used.","'resultData' is assigned a value but never used.","'setResultData' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [addCategory, isDelete, user_id]",{"range":"152","text":"153"},"Update the dependencies array to be: [category_id]",{"range":"154","text":"155"},"Update the dependencies array to be: [detected]",{"range":"156","text":"157"},"Update the dependencies array to be: [delay, value]",{"range":"158","text":"159"},[1026,1049],"[addCategory, isDelete, user_id]",[747,749],"[category_id]",[1650,1652],"[detected]",[1259,1266],"[delay, value]"]