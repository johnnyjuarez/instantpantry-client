[{"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\index.js":"1","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\App.js":"2","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\reportWebVitals.js":"3","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\LandingPage\\LandingPage.js":"4","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\LoginForm\\LoginForm.js":"5","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\SignUpForm\\SignUpForm.js":"6","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\Dashboard\\Dashboard.js":"7","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\CategoryCard\\CategoryCard.js":"8","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddItem\\AddItem.js":"9","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\config.js":"10","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\token-service.js":"11","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\List\\List.js":"12","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Item\\Item.js":"13","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Modal\\Modal.js":"14","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddCategoryForm\\AddCategoryForm.js":"15","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Scanner\\Scanner.js":"16","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\barcodeScanner\\barcodeScanner.js":"17","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\BarcodeScanner\\BarcodeScanner.js":"18","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\itemContext.js":"19","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Nav\\Nav.js":"20"},{"size":457,"mtime":1609906845826,"results":"21","hashOfConfig":"22"},{"size":1237,"mtime":1610925349684,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":403,"mtime":1609986267622,"results":"25","hashOfConfig":"22"},{"size":1701,"mtime":1611007811021,"results":"26","hashOfConfig":"22"},{"size":1379,"mtime":1611001206503,"results":"27","hashOfConfig":"22"},{"size":1802,"mtime":1610998459905,"results":"28","hashOfConfig":"22"},{"size":1172,"mtime":1610667833429,"results":"29","hashOfConfig":"22"},{"size":3865,"mtime":1610945457159,"results":"30","hashOfConfig":"22"},{"size":272,"mtime":1610679328696,"results":"31","hashOfConfig":"22"},{"size":421,"mtime":1610592319855,"results":"32","hashOfConfig":"22"},{"size":1171,"mtime":1610998091655,"results":"33","hashOfConfig":"22"},{"size":2862,"mtime":1610998132741,"results":"34","hashOfConfig":"22"},{"size":350,"mtime":1610651380769,"results":"35","hashOfConfig":"22"},{"size":1075,"mtime":1610655342152,"results":"36","hashOfConfig":"22"},{"size":1982,"mtime":1610673155648,"results":"37","hashOfConfig":"22"},{"size":674,"mtime":1610674069752,"results":"38","hashOfConfig":"22"},{"size":1432,"mtime":1610923630051,"results":"39","hashOfConfig":"22"},{"size":155,"mtime":1610857836949,"results":"40","hashOfConfig":"22"},{"size":404,"mtime":1610998419965,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"155tlxv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\index.js",[],["89","90"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\App.js",["91"],"import React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LandingPage from './routes/LandingPage/LandingPage'\nimport Dashboard from './routes/Dashboard/Dashboard'\nimport SignUpForm from './components/SignUpForm/SignUpForm'\nimport List from './routes/List/List'\nimport AddItem from './components/AddItem/AddItem'\nimport ItemContext from './itemContext';\nimport './App.css';\n\n\nfunction App() {\n\n\n  const [data, setData] = useState({})\n\n  let passData = (newData) => {\n    if (!data) {\n      setData(newData);\n    }\n    return;\n  }\n\n  let resetData = (e) => {\n    if (data) {\n      setData('');\n    }\n  }\n\n  const value = {\n    passData,\n    resetData\n  }\n  return (\n    <ItemContext.Provider value={value}>\n      <Router>\n        <Route exact path='/' component={LandingPage} />\n        <Route exact path='/signup' component={SignUpForm} />\n        <Route exact path='/dashboard' component={Dashboard} />\n        <Route exact path='/category/:id' component={List} />\n        <Route exact path='/category/:id/addItem' component={AddItem} >\n          <AddItem barcodeData={data} />\n        </Route>\n      </Router>\n    </ItemContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\reportWebVitals.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\LandingPage\\LandingPage.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\LoginForm\\LoginForm.js",["92","93"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\SignUpForm\\SignUpForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\Dashboard\\Dashboard.js",["94"],"import React, { useState, useEffect } from 'react'\r\nimport CategoryCard from '../../components/CategoryCard/CategoryCard'\r\nimport Modal from '../../components/Modal/Modal'\r\nimport TokenService from '../../services/token-service'\r\n\r\nimport config from '../../config';\r\nimport AddCategoryForm from '../../components/AddCategoryForm/AddCategoryForm';\r\nimport Nav from '../../components/Nav/Nav';\r\n\r\nexport default function Dashboard() {\r\n  // state for holding category data\r\n  const [categories, setCategories] = useState([])\r\n  const [addCategory, setAddCategory] = useState(false);\r\n  const [isDelete, setIsDelete] = useState(false);\r\n\r\n  const user_id = localStorage.getItem('userId');\r\n\r\n  useEffect(() => {\r\n    setIsDelete(false);\r\n\r\n    fetch(`${config.API_ENDPOINT}/category/${user_id}`, {\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setCategories(data);\r\n      })\r\n  }, [addCategory, isDelete])\r\n\r\n\r\n  const addCategoryHandler = () => {\r\n    setAddCategory(!addCategory);\r\n  }\r\n\r\n  let addCategoryHTML = (\r\n    <Modal open={addCategory} onClose={addCategoryHandler}>\r\n      <AddCategoryForm closeOnSubmit={addCategoryHandler} />\r\n    </Modal>\r\n  )\r\n\r\n  const categoryCards = categories.map((category) => {\r\n    return <CategoryCard\r\n      key={category.id}\r\n      id={category.id}\r\n      title={category.category_title}\r\n      onDelete={() => { setIsDelete(true) }}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <h1 className='title'>InstantPantry</h1>\r\n      {categoryCards}\r\n      <button onClick={addCategoryHandler}>Add Category</button>\r\n      {addCategoryHTML}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\CategoryCard\\CategoryCard.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddItem\\AddItem.js",["95","96","97","98"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport BarcodeScanner from '../BarcodeScanner/BarcodeScanner'\r\nimport ItemContext from '../../itemContext';\r\nimport config from '../../config';\r\nimport TokenService from '../../services/token-service';\r\n\r\nimport './AddItem.css'\r\n\r\nimport { Link, useHistory, withRouter } from 'react-router-dom';\r\n\r\nfunction AddItem(props) {\r\n  const context = useContext(ItemContext);\r\n  // console.log(props.barcode)\r\n  const [useForm, setUseForm] = useState(false);\r\n  const [useCamera, setUseCamera] = useState(false);\r\n  const [barcode, setBarcode] = useState({});\r\n  const [userAmount, setUserAmount] = useState('');\r\n  const [itemName, setItemName] = useState('');\r\n  let history = useHistory();\r\n\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const path = props.history.location.pathname;\r\n    const numPath = path.match(/\\d/g);\r\n    let payload = {\r\n      item_name: itemName,\r\n      amount: userAmount\r\n    }\r\n    fetch(`${config.API_ENDPOINT}/items/${numPath}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      },\r\n      body: JSON.stringify(payload)\r\n    }).then(res => {\r\n      return res.json();\r\n    })\r\n      .then(() => {\r\n        context.resetData();\r\n        setUseCamera(false);\r\n        setUseForm(false);\r\n      })\r\n  }\r\n\r\n  const onScanSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const path = props.history.location.pathname;\r\n    const numPath = path.match(/\\d/g);\r\n    let payload = {\r\n      item_name: props.barcodeData.description,\r\n      amount: userAmount,\r\n      image: props.barcodeData.image_url,\r\n      barcode: props.barcodeData.code\r\n    }\r\n    fetch(`${config.API_ENDPOINT}/items/${numPath}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      },\r\n      body: JSON.stringify(payload)\r\n    }).then(res => {\r\n      return res.json();\r\n    })\r\n      .then(() => {\r\n        context.resetData();\r\n        setUseCamera(false);\r\n        setUseForm(false);\r\n      })\r\n  }\r\n\r\n  const formHTML = (\r\n    <form onSubmit={onSubmitHandler} className='add-item-form'>\r\n      <label>Item Name:</label>\r\n      <input onChange={(e) => { setItemName(e.target.value) }} type='text' />\r\n      <label>Amount:</label>\r\n      <input onChange={(e) => { setUserAmount(e.target.value) }} type='text' />\r\n      <input type='submit' />\r\n    </form>\r\n  )\r\n\r\n  const camera = <BarcodeScanner />\r\n\r\n  let renderForm = null;\r\n  if (useForm) {\r\n    renderForm = formHTML;\r\n  } else if (useCamera) {\r\n    renderForm = camera;\r\n  }\r\n\r\n\r\n  const onManualSelect = (e) => {\r\n    setUseForm(true);\r\n    setUseCamera(false);\r\n  }\r\n\r\n  const onCameraSelect = (e) => {\r\n    setUseCamera(true);\r\n    setUseForm(false);\r\n  }\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setUserAmount(e.target.value);\r\n  }\r\n\r\n  if (props.barcodeData.class) {\r\n    console.log('barcode prop', props.barcodeData)\r\n    renderForm = (\r\n      <form onSubmit={onScanSubmitHandler} className='add-item-form'>\r\n        <label>Item Name:</label>\r\n        <input type='text' defaultValue={props.barcodeData.description} />\r\n        <label>Enter Amount:</label>\r\n        <input onChange={amountChangeHandler} required={true} type='text' />\r\n        <img src={props.barcodeData.image_url} alt={props.barcodeData.description} />\r\n        <input type='submit' />\r\n      </form>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Link to='/dashboard'>Home</Link>\r\n      <h1 className='title'>Add Item</h1>\r\n      <button onClick={onManualSelect}>Enter Manually</button>\r\n      <button onClick={onCameraSelect}>Scan Barcode</button>\r\n      {renderForm}\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(AddItem);","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\config.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\token-service.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\List\\List.js",["99"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport config from '../../config';\r\nimport TokenService from '../../services/token-service'\r\nimport Item from '../../components/Item/Item'\r\n\r\nexport default function List(props) {\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const idFromPath = props.location.pathname;\r\n  const category_id = idFromPath.slice(10);\r\n  useEffect(() => {\r\n    fetch(`${config.API_ENDPOINT}/items/${category_id}`, {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setItems(data);\r\n      })\r\n  }, [update])\r\n\r\n  const updateRender = () => {\r\n    setUpdate(!update);\r\n  }\r\n\r\n\r\n  const renderList = items.map(item => {\r\n    return <Item key={item.id} itemData={item} renderUpdate={updateRender} />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <Link to='/dashboard'>Home</Link>\r\n      </nav>\r\n      <h1>List</h1>\r\n      {renderList}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Item\\Item.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddCategoryForm\\AddCategoryForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Scanner\\Scanner.js",["100"],"import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\barcodeScanner\\barcodeScanner.js",["101"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\BarcodeScanner\\BarcodeScanner.js",["102","103","104"],"import React, { useState, useContext } from \"react\";\r\nimport Scanner from '../Scanner/Scanner'\r\nimport ReactDOM from \"react-dom\";\r\nimport config from '../../config';\r\nimport ItemContext from '../../itemContext';\r\nimport { debounce } from 'throttle-debounce';\r\n\r\n// import \"./styles.css\";\r\n\r\nexport default function BarcodeScanner() {\r\n  const context = useContext(ItemContext);\r\n  const [camera, setCamera] = useState(false);\r\n  const [newResult, setNewResult] = useState(null);\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  let onDetected = debounce(1000, (result) => {\r\n\r\n    if (result) {\r\n      setCamera(false);\r\n      setLoading(true);\r\n      fetch(`https://cors-anywhere.herokuapp.com/https://barcode.monster/api/${result}`)\r\n        .then(res => {\r\n          return res.json()\r\n        })\r\n        .then(data => {\r\n          setLoading(false);\r\n          context.passData(data);\r\n        });\r\n      return;\r\n    }\r\n  });\r\n\r\n  let startCameraHandler = () => {\r\n    setCamera(!camera);\r\n    context.resetData();\r\n  }\r\n\r\n\r\n  let renderHTML = (<div className=\"App\">\r\n    <p>{newResult ? newResult : \"Scanning...\"}</p>\r\n    <button onClick={startCameraHandler}>\r\n      {camera ? \"Stop\" : \"Start\"}\r\n    </button>\r\n    <div className=\"container\">\r\n      {camera && <Scanner onDetected={onDetected} />}\r\n    </div>\r\n  </div>)\r\n\r\n  if (loading) {\r\n    renderHTML = <div><p>Loading...</p></div>\r\n  }\r\n\r\n  return renderHTML;\r\n}","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\itemContext.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Nav\\Nav.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":38},{"ruleId":"109","severity":1,"message":"113","line":15,"column":10,"nodeType":"111","messageId":"112","endLine":15,"endColumn":15},{"ruleId":"109","severity":1,"message":"114","line":15,"column":17,"nodeType":"111","messageId":"112","endLine":15,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":33,"column":6,"nodeType":"117","endLine":33,"endColumn":29,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"120","line":16,"column":10,"nodeType":"111","messageId":"112","endLine":16,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":16,"column":19,"nodeType":"111","messageId":"112","endLine":16,"endColumn":29},{"ruleId":"109","severity":1,"message":"122","line":19,"column":7,"nodeType":"111","messageId":"112","endLine":19,"endColumn":14},{"ruleId":"115","severity":1,"message":"123","line":27,"column":6,"nodeType":"117","endLine":27,"endColumn":14,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"125","line":63,"column":6,"nodeType":"117","endLine":63,"endColumn":8,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"127","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"128","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"129","line":13,"column":21,"nodeType":"111","messageId":"112","endLine":13,"endColumn":33},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'useEffect' is defined but never used.","'barcode' is assigned a value but never used.","'setBarcode' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'category_id'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'detected'. Either include it or remove the dependency array.",["134"],"'ReactDOM' is defined but never used.","'config' is defined but never used.","'setNewResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [addCategory, isDelete, user_id]",{"range":"141","text":"142"},"Update the dependencies array to be: [category_id, update]",{"range":"143","text":"144"},"Update the dependencies array to be: [detected]",{"range":"145","text":"146"},[1069,1092],"[addCategory, isDelete, user_id]",[809,817],"[category_id, update]",[1650,1652],"[detected]"]