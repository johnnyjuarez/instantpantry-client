[{"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\index.js":"1","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\App.js":"2","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\reportWebVitals.js":"3","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\LandingPage\\LandingPage.js":"4","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\LoginForm\\LoginForm.js":"5","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\SignUpForm\\SignUpForm.js":"6","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\Dashboard\\Dashboard.js":"7","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\CategoryCard\\CategoryCard.js":"8","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddItem\\AddItem.js":"9","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\config.js":"10","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\token-service.js":"11","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\List\\List.js":"12","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Item\\Item.js":"13","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Modal\\Modal.js":"14","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddCategoryForm\\AddCategoryForm.js":"15","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Scanner\\Scanner.js":"16","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\barcodeScanner\\barcodeScanner.js":"17","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\BarcodeScanner\\BarcodeScanner.js":"18","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\itemContext.js":"19","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Nav\\Nav.js":"20"},{"size":457,"mtime":1609906845826,"results":"21","hashOfConfig":"22"},{"size":1237,"mtime":1610925349684,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":428,"mtime":1611026279133,"results":"25","hashOfConfig":"22"},{"size":1850,"mtime":1611109261836,"results":"26","hashOfConfig":"22"},{"size":1490,"mtime":1611026708570,"results":"27","hashOfConfig":"22"},{"size":1854,"mtime":1611028194400,"results":"28","hashOfConfig":"22"},{"size":1172,"mtime":1610667833429,"results":"29","hashOfConfig":"22"},{"size":3867,"mtime":1611089409852,"results":"30","hashOfConfig":"22"},{"size":272,"mtime":1610679328696,"results":"31","hashOfConfig":"22"},{"size":421,"mtime":1610592319855,"results":"32","hashOfConfig":"22"},{"size":1183,"mtime":1611086847678,"results":"33","hashOfConfig":"22"},{"size":2988,"mtime":1611029925502,"results":"34","hashOfConfig":"22"},{"size":350,"mtime":1610651380769,"results":"35","hashOfConfig":"22"},{"size":1168,"mtime":1611028829291,"results":"36","hashOfConfig":"22"},{"size":1982,"mtime":1610673155648,"results":"37","hashOfConfig":"22"},{"size":674,"mtime":1610674069752,"results":"38","hashOfConfig":"22"},{"size":1474,"mtime":1611089744702,"results":"39","hashOfConfig":"22"},{"size":155,"mtime":1610857836949,"results":"40","hashOfConfig":"22"},{"size":494,"mtime":1611027287936,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"155tlxv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\index.js",[],["86","87"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\App.js",["88"],"import React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LandingPage from './routes/LandingPage/LandingPage'\nimport Dashboard from './routes/Dashboard/Dashboard'\nimport SignUpForm from './components/SignUpForm/SignUpForm'\nimport List from './routes/List/List'\nimport AddItem from './components/AddItem/AddItem'\nimport ItemContext from './itemContext';\nimport './App.css';\n\n\nfunction App() {\n\n\n  const [data, setData] = useState({})\n\n  let passData = (newData) => {\n    if (!data) {\n      setData(newData);\n    }\n    return;\n  }\n\n  let resetData = (e) => {\n    if (data) {\n      setData('');\n    }\n  }\n\n  const value = {\n    passData,\n    resetData\n  }\n  return (\n    <ItemContext.Provider value={value}>\n      <Router>\n        <Route exact path='/' component={LandingPage} />\n        <Route exact path='/signup' component={SignUpForm} />\n        <Route exact path='/dashboard' component={Dashboard} />\n        <Route exact path='/category/:id' component={List} />\n        <Route exact path='/category/:id/addItem' component={AddItem} >\n          <AddItem barcodeData={data} />\n        </Route>\n      </Router>\n    </ItemContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\reportWebVitals.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\LandingPage\\LandingPage.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\LoginForm\\LoginForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\SignUpForm\\SignUpForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\Dashboard\\Dashboard.js",["89"],"import React, { useState, useEffect } from 'react'\r\nimport CategoryCard from '../../components/CategoryCard/CategoryCard'\r\nimport Modal from '../../components/Modal/Modal'\r\nimport TokenService from '../../services/token-service'\r\n\r\nimport config from '../../config';\r\nimport AddCategoryForm from '../../components/AddCategoryForm/AddCategoryForm';\r\nimport Nav from '../../components/Nav/Nav';\r\n\r\nimport './Dashboard.css';\r\n\r\nexport default function Dashboard() {\r\n  // state for holding category data\r\n  const [categories, setCategories] = useState([])\r\n  const [addCategory, setAddCategory] = useState(false);\r\n  const [isDelete, setIsDelete] = useState(false);\r\n\r\n  const user_id = localStorage.getItem('userId');\r\n\r\n  useEffect(() => {\r\n    setIsDelete(false);\r\n\r\n    fetch(`${config.API_ENDPOINT}/category/${user_id}`, {\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        authorization: `bearer ${TokenService.getAuthToken()}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setCategories(data);\r\n      })\r\n  }, [addCategory, isDelete])\r\n\r\n\r\n  const addCategoryHandler = () => {\r\n    setAddCategory(!addCategory);\r\n  }\r\n\r\n  let addCategoryHTML = (\r\n    <Modal open={addCategory} onClose={addCategoryHandler}>\r\n      <AddCategoryForm closeOnSubmit={addCategoryHandler} />\r\n    </Modal>\r\n  )\r\n\r\n  const categoryCards = categories.map((category) => {\r\n    return <CategoryCard\r\n      key={category.id}\r\n      id={category.id}\r\n      title={category.category_title}\r\n      onDelete={() => { setIsDelete(true) }}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <h1 className='title'>InstantPantry</h1>\r\n      {categoryCards}\r\n      <button className='addCat-btn' onClick={addCategoryHandler}>Add Category</button>\r\n      {addCategoryHTML}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\CategoryCard\\CategoryCard.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddItem\\AddItem.js",["90","91","92","93","94","95"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\config.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\services\\token-service.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\routes\\List\\List.js",["96","97"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Item\\Item.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\AddCategoryForm\\AddCategoryForm.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Scanner\\Scanner.js",["98"],"import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\barcodeScanner\\barcodeScanner.js",["99"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\BarcodeScanner\\BarcodeScanner.js",["100","101","102"],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\itemContext.js",[],"C:\\Users\\johnn\\projects\\instantpantry-client\\src\\components\\Nav\\Nav.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":35,"column":6,"nodeType":"113","endLine":35,"endColumn":29,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"116","line":10,"column":10,"nodeType":"109","messageId":"110","endLine":10,"endColumn":14},{"ruleId":"107","severity":1,"message":"117","line":17,"column":10,"nodeType":"109","messageId":"110","endLine":17,"endColumn":17},{"ruleId":"107","severity":1,"message":"118","line":17,"column":19,"nodeType":"109","messageId":"110","endLine":17,"endColumn":29},{"ruleId":"107","severity":1,"message":"119","line":20,"column":7,"nodeType":"109","messageId":"110","endLine":20,"endColumn":14},{"ruleId":"107","severity":1,"message":"120","line":95,"column":9,"nodeType":"109","messageId":"110","endLine":95,"endColumn":23},{"ruleId":"107","severity":1,"message":"116","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"121","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":14,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":63,"column":6,"nodeType":"113","endLine":63,"endColumn":8,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"125","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"125","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"126","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":14},{"ruleId":"107","severity":1,"message":"127","line":14,"column":21,"nodeType":"109","messageId":"110","endLine":14,"endColumn":33},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'barcode' is assigned a value but never used.","'setBarcode' is assigned a value but never used.","'history' is assigned a value but never used.","'onManualSelect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'category_id'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'detected'. Either include it or remove the dependency array.",["132"],"'ReactDOM' is defined but never used.","'config' is defined but never used.","'setNewResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [addCategory, isDelete, user_id]",{"range":"139","text":"140"},"Update the dependencies array to be: [category_id, update]",{"range":"141","text":"142"},"Update the dependencies array to be: [detected]",{"range":"143","text":"144"},[1098,1121],"[addCategory, isDelete, user_id]",[853,861],"[category_id, update]",[1650,1652],"[detected]"]